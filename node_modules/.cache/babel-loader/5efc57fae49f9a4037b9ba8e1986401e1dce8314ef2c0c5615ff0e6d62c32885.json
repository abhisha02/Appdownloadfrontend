{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leaveapplication\\\\LeaveApplicationFrontend\\\\leave-application\\\\src\\\\components\\\\Employee\\\\DownLoadLeaveReport.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadLeaveReport = () => {\n  _s();\n  const [leaveHistory, setLeaveHistory] = useState([]);\n  const baseURL = \"http://127.0.0.1:8000\";\n  useEffect(() => {\n    const fetchLeaveHistory = async () => {\n      try {\n        const token = localStorage.getItem(\"access\");\n        const response = await axios.get(baseURL + \"/leave/history/\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setLeaveHistory(response.data);\n      } catch (error) {\n        console.error(\"Error fetching leave history:\", error);\n      }\n    };\n    fetchLeaveHistory();\n  }, []);\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n\n    // Add title\n    doc.text(\"Leave Report\", 14, 20);\n\n    // Check if there is data to display\n    if (leaveHistory.length > 0) {\n      // Define table headers\n      const headers = [[\"Leave Type\", \"Start Date\", \"End Date\", \"Reason\", \"Status\", \"Submission Date\"]];\n\n      // Define table rows\n      const data = leaveHistory.map(leave => [leave.leave_type.charAt(0).toUpperCase() + leave.leave_type.slice(1), new Date(leave.start_date).toLocaleDateString(), new Date(leave.end_date).toLocaleDateString(), leave.reason, leave.status.charAt(0).toUpperCase() + leave.status.slice(1), new Date(leave.submission_date).toLocaleString()]);\n\n      // Add table to PDF using autoTable\n      doc.autoTable({\n        head: headers,\n        body: data,\n        startY: 30\n      });\n\n      // Save the PDF\n      doc.save(\"leave-report.pdf\");\n    } else {\n      // If no leave history found, show a message in the PDF\n      doc.text(\"No leave history available.\", 14, 30);\n      doc.save(\"leave-report.pdf\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadPDF,\n      className: \"w-full py-3 px-4 bg-gray-800 text-gray-200 rounded-lg hover:bg-gray-700 transition duration-300 border border-gray-700\",\n      children: \"Download Leave Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadLeaveReport, \"c94qQVxmVXJF6OH/tFdoaWlKx8M=\");\n_c = DownloadLeaveReport;\nexport default DownloadLeaveReport;\nvar _c;\n$RefreshReg$(_c, \"DownloadLeaveReport\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsPDF","jsxDEV","_jsxDEV","DownloadLeaveReport","_s","leaveHistory","setLeaveHistory","baseURL","fetchLeaveHistory","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","downloadPDF","doc","text","length","map","leave","leave_type","charAt","toUpperCase","slice","Date","start_date","toLocaleDateString","end_date","reason","status","submission_date","toLocaleString","autoTable","head","body","startY","save","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Leaveapplication/LeaveApplicationFrontend/leave-application/src/components/Employee/DownLoadLeaveReport.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst DownloadLeaveReport = () => {\r\n  const [leaveHistory, setLeaveHistory] = useState([]);\r\n  const baseURL =\"http://127.0.0.1:8000\";\r\n\r\n  useEffect(() => {\r\n    const fetchLeaveHistory = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"access\");\r\n        const response = await axios.get(baseURL + \"/leave/history/\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setLeaveHistory(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching leave history:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLeaveHistory();\r\n  }, []);\r\n\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n\r\n    // Add title\r\n    doc.text(\"Leave Report\", 14, 20);\r\n\r\n    // Check if there is data to display\r\n    if (leaveHistory.length > 0) {\r\n      // Define table headers\r\n      const headers = [\r\n        [\"Leave Type\", \"Start Date\", \"End Date\", \"Reason\", \"Status\", \"Submission Date\"],\r\n      ];\r\n\r\n      // Define table rows\r\n      const data = leaveHistory.map((leave) => [\r\n        leave.leave_type.charAt(0).toUpperCase() + leave.leave_type.slice(1),\r\n        new Date(leave.start_date).toLocaleDateString(),\r\n        new Date(leave.end_date).toLocaleDateString(),\r\n        leave.reason,\r\n        leave.status.charAt(0).toUpperCase() + leave.status.slice(1),\r\n        new Date(leave.submission_date).toLocaleString(),\r\n      ]);\r\n\r\n      // Add table to PDF using autoTable\r\n      doc.autoTable({\r\n        head: headers,\r\n        body: data,\r\n        startY: 30,\r\n      });\r\n\r\n      // Save the PDF\r\n      doc.save(\"leave-report.pdf\");\r\n    } else {\r\n      // If no leave history found, show a message in the PDF\r\n      doc.text(\"No leave history available.\", 14, 30);\r\n      doc.save(\"leave-report.pdf\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={downloadPDF}\r\n        className=\"w-full py-3 px-4 bg-gray-800 text-gray-200 rounded-lg hover:bg-gray-700 transition duration-300 border border-gray-700\"\r\n      >\r\n        Download Leave Report\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadLeaveReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
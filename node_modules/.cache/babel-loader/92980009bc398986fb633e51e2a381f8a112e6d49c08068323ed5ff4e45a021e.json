{"ast":null,"code":"var _jsxFileName = \"D:\\\\AndroidAppdownloadportal\\\\Andoridappdownloadfrontend\\\\Appdownload\\\\src\\\\utils\\\\Routes\\\\PublicRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport isAuthUser from \"../isAuthUser\";\nimport Loader from \"../Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicRoute = ({\n  children\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [isAdmin, setisAdmin] = useState(false);\n  useEffect(() => {\n    const authenticate = async () => {\n      const authStatus = await isAuthUser();\n      setIsAuthenticated(authStatus.isAuthenticated);\n\n      // Get user details from localStorage\n      const tokens = localStorage.getItem('tokens');\n      if (tokens) {\n        const userData = JSON.parse(tokens);\n        setIsManager(userData.is_manager);\n      }\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    };\n    authenticate();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: isAdmin ? \"/admin/home\" : \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(PublicRoute, \"RmaqCOgSy57nJLNHqQoEe7EK/+A=\");\n_c = PublicRoute;\nexport default PublicRoute;\nvar _c;\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","isAuthUser","Loader","jsxDEV","_jsxDEV","PublicRoute","children","_s","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","isAdmin","setisAdmin","authenticate","authStatus","tokens","localStorage","getItem","userData","JSON","parse","setIsManager","is_manager","setTimeout","className","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["D:/AndroidAppdownloadportal/Andoridappdownloadfrontend/Appdownload/src/utils/Routes/PublicRoute.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport isAuthUser from \"../isAuthUser\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst PublicRoute = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n  const [isAdmin, setisAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const authenticate = async () => {\r\n      const authStatus = await isAuthUser();\r\n      setIsAuthenticated(authStatus.isAuthenticated);\r\n      \r\n      // Get user details from localStorage\r\n      const tokens = localStorage.getItem('tokens');\r\n      if (tokens) {\r\n        const userData = JSON.parse(tokens);\r\n        setIsManager(userData.is_manager);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 1000);\r\n    };\r\n    authenticate();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"h-screen flex items-center justify-center\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    return <Navigate to={isAdmin ? \"/admin/home\" : \"/dashboard\"} />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default PublicRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,UAAU,GAAG,MAAMd,UAAU,CAAC,CAAC;MACrCU,kBAAkB,CAACI,UAAU,CAACL,eAAe,CAAC;;MAE9C;MACA,MAAMM,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,IAAIF,MAAM,EAAE;QACV,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC;QACnCM,YAAY,CAACH,QAAQ,CAACI,UAAU,CAAC;MACnC;MAEAC,UAAU,CAAC,MAAM;QACff,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDK,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIN,SAAS,EAAE;IACb,oBACEJ,OAAA;MAAKqB,SAAS,EAAC,2CAA2C;MAAAnB,QAAA,eACxDF,OAAA,CAACF,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV;EAEA,IAAInB,eAAe,EAAE;IACnB,oBAAON,OAAA,CAACJ,QAAQ;MAAC8B,EAAE,EAAElB,OAAO,GAAG,aAAa,GAAG;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjE;EAEA,OAAOvB,QAAQ;AACjB,CAAC;AAACC,EAAA,CArCIF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}